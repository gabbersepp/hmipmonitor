// <auto-generated />
using HmIpMonitor.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HmIpMonitor.Migrations
{
    [DbContext(typeof(HmIpMonitorContext))]
    partial class HmIpMonitorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("HmIpMonitor.Models.CcuDataPoint", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("DeviceParameterId")
                        .HasColumnType("bigint");

                    b.Property<double>("Quality")
                        .HasColumnType("double precision");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("DeviceParameterId");

                    b.ToTable("DataPoint");
                });

            modelBuilder.Entity("HmIpMonitor.Models.DeviceParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Channel")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Parameter")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceParameter");
                });

            modelBuilder.Entity("HmIpMonitor.Models.HmIpDevice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("HmIpDevice");
                });

            modelBuilder.Entity("HmIpMonitor.Models.CcuDataPoint", b =>
                {
                    b.HasOne("HmIpMonitor.Models.DeviceParameter", "DeviceParameter")
                        .WithMany("DataPoints")
                        .HasForeignKey("DeviceParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceParameter");
                });

            modelBuilder.Entity("HmIpMonitor.Models.DeviceParameter", b =>
                {
                    b.HasOne("HmIpMonitor.Models.HmIpDevice", "Device")
                        .WithMany("DeviceParameter")
                        .HasForeignKey("DeviceId");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("HmIpMonitor.Models.DeviceParameter", b =>
                {
                    b.Navigation("DataPoints");
                });

            modelBuilder.Entity("HmIpMonitor.Models.HmIpDevice", b =>
                {
                    b.Navigation("DeviceParameter");
                });
#pragma warning restore 612, 618
        }
    }
}
